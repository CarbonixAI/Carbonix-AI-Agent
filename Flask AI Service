from flask import Flask, request, jsonify
import numpy as np
from tensorflow.keras.models import load_model
from sklearn.preprocessing import StandardScaler

app = Flask(__name__)

# Load pre-trained model and scaler
model = load_model('carbon_model.h5')
scaler = StandardScaler()
scaler.mean_ = np.array([0, 0, 0])  # Replace with actual mean
scaler.scale_ = np.array([1, 1, 1])  # Replace with actual scale

@app.route('/predict', methods=['POST'])
def predict():
    data = request.json
    features = np.array(data['features']).reshape(1, -1)
    scaled_features = scaler.transform(features)
    prediction = model.predict(scaled_features)
    return jsonify({'prediction': float(prediction[0][0])})

if __name__ == '__main__':
    app.run(port=6000)
